#!/usr/bin/env ruby

require 'optparse'

def run(cmd)
  unless system(cmd)
    exit(1)
  end
end

options = {
  # Run debugger tests by default, since default test set is not useful.
  debugger: true,
}
OptionParser.new do |opts|
  opts.banner = "Usage: str"

  opts.on("--ruby", "Test against Ruby library's most recent release") do
    options[:ruby] = true
  end

  opts.on("--ruby-dev", "Test against local develompent tree of Ruby library") do
    options[:ruby_dev] = true
    options[:ruby] = true
  end

  opts.on('-d', "--debugger", "Run all dynamic instrumentation / \"debugger\" tests") do
    options[:debugger] = true
  end

  opts.on("-t", "--test TEST", "Specify test to run (can be used more than once)") do |v|
    options[:tests] ||= []
    options[:tests] << v
  end
end.parse!

# Verify current path is in system-tests
unless File.exist?('run.sh') && File.exist?('manifests')
  raise "Expected to be in system-tests"
end

language = if options[:ruby]
  'ruby'
else
  raise "Language not specified"
end

if options[:ruby_dev]
  run('rsync -av ~/apps/dtr/ binaries/dd-trace-rb --exclude .git --delete')
end

run("./build.sh #{language}")

run_args = ''
if options[:debugger]
  %w,
    debugger_probes_status

    debugger_method_probes_snapshot
    debugger_line_probes_snapshot
    debugger_mix_log_probe

    debugger_pii_redaction

    debugger_exception_replay
    debugger_expression_language
  ,.each do |scenario|
    run_args << " +S #{scenario}"
  end
end

cmd = "./run.sh #{run_args}"

puts "Executing: #{cmd}"
run(cmd)
